- filesystem: "root"
  path: "/etc/kubernetes/addons/kube-proxy.yaml"
  mode: 0644
  contents:
      inline: |
        apiVersion: v1
        kind: ServiceAccount
        metadata:
          name: kube-proxy
          namespace: kube-system
          labels:
            addonmanager.kubernetes.io/mode: Reconcile
        ---
        kind: ClusterRoleBinding
        apiVersion: rbac.authorization.k8s.io/v1beta1
        metadata:
          name: system:kube-proxy
          labels:
            addonmanager.kubernetes.io/mode: Reconcile
        subjects:
          - kind: ServiceAccount
            name: kube-proxy
            namespace: kube-system
        roleRef:
          kind: ClusterRole
          name: system:node-proxier
          apiGroup: rbac.authorization.k8s.io
        ---
        apiVersion: extensions/v1beta1
        kind: DaemonSet
        metadata:
          labels:
            k8s-app: kube-proxy
            addonmanager.kubernetes.io/mode: Reconcile
          name: kube-proxy
          namespace: kube-system
        spec:
          selector:
            matchLabels:
              k8s-app: kube-proxy
          updateStrategy:
            type: RollingUpdate
            rollingUpdate:
              maxUnavailable: 25%
          template:
            metadata:
              labels:
                k8s-app: kube-proxy
              annotations:
                prometheus.io.scrape: "true"
                prometheus.io.path: "/metrics"
                prometheus.io.port: "10249"
                scheduler.alpha.kubernetes.io/critical-pod: ""
            spec:
              priorityClassName: system-node-critical
              hostNetwork: true
              nodeSelector:
                beta.kubernetes.io/kube-proxy-ds-ready: "true"
              tolerations:
              - operator: "Exists"
                effect: "NoExecute"
              - operator: "Exists"
                effect: "NoSchedule"
              containers:
              - name: kube-proxy
                image: {kubeletURL}:{kubeletVersion}
                command:
                - /hyperkube
                - proxy
                - --config=/etc/kube-proxy/kube-proxy.conf
                securityContext:
                  privileged: true
                volumeMounts:
                - mountPath: /etc/ssl/certs
                  name: "ssl-certs"
                - mountPath: /etc/kube-proxy/kubeconfig.yaml
                  name: "proxykubeconfig"
                  readOnly: true
                - mountPath: /etc/kube-proxy/kube-proxy.conf
                  name: "proxyconfig"
                  readOnly: true
                - mountPath: /etc/kubernetes/ssl
                  name: "etc-kubernetes-ssl"
                  readOnly: true
                - mountPath: /lib/modules
                  name: "modules"
                  readOnly: true
                - mountPath: /run/xtables.lock
                  name: xtables-lock
                  readOnly: false
              volumes:
              - name: "ssl-certs"
                hostPath:
                  path: "/usr/share/ca-certificates"
              - name: "proxykubeconfig"
                hostPath:
                  path: "/etc/kube-proxy/kubeconfig.yaml"
              - name: "proxyconfig"
                hostPath:
                  path: "/etc/kube-proxy/kube-proxy.conf"
              - name: "etc-kubernetes-ssl"
                hostPath:
                  path: "/etc/kubernetes/ssl"
              - name: "modules"
                hostPath:
                  path: "/lib/modules"
              - name: xtables-lock
                hostPath:
                  path: /run/xtables.lock
                  type: FileOrCreate
              serviceAccountName: kube-proxy
