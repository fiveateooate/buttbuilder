#cloud-config

ssh_authorized_keys:
%(ssh_pub_keys)s
hostname: "%(hostname)s"
coreos:
  update:
    reboot-strategy: "off"
  units:
%(network_config)s
    - name: update-ca-certificates.service
      drop-ins:
        - name: 00-rmsymlink.conf
          content: |
            [Unit]
            ConditionPathIsSymbolicLink=
    - name: etcd-member.service
      enable: true
      command: start
      drop-ins:
      - name: 20-clct-etcd-member.conf
        content: |-
          [Service]
          Environment="ETCD_IMAGE_TAG=%(etcd_version)s"
          ExecStart=
          ExecStart=/usr/lib/coreos/etcd-wrapper $ETCD_OPTS \
            --name=%(hostname)s \
            --advertise-client-urls=http://%(ip)s:2379 \
            --initial-advertise-peer-urls=http://%(ip)s:2380 \
            --listen-client-urls=http://0.0.0.0:2379 \
            --listen-peer-urls=http://0.0.0.0:2380 \
            --initial-cluster=%(etcd_initial_cluster)s \
            --initial-cluster-token=%(etcd_initial_cluster_token)s
    - name: systemd-sysctl.service
      command: restart
    - name: flanneld.service
      drop-ins:
        - name: 50-network-config.conf
          content: |
            [Service]
            ExecStartPre=/usr/bin/ln -sf /etc/flannel/options.env /run/flannel/options.env
            ExecStartPre=/usr/bin/etcdctl set /coreos.com/network/config '{ "Network": "%(cluster_cidr)s" ,"Backend": { "Type": "vxlan" }}'
    - name: docker.service
      drop-ins:
        - name: 50-flannel-config.conf
          content: |
            [Unit]
            Requires=flanneld.service
            After=flanneld.service
            [Service]
            EnvironmentFile=/etc/kubernetes/cni/docker_opts_cni.env
      command: start
    - name: kubelet.service
      command: start
      content: |
        [Unit]
        Description=kubelet service
        [Service]
        Environment=KUBELET_IMAGE_TAG=%(kubeletVersion)s
        Environment="RKT_RUN_ARGS=--uuid-file-save=/var/run/kubelet-pod.uuid \
          --volume var-log,kind=host,source=/var/log \
          --mount volume=var-log,target=/var/log \
          --volume dns,kind=host,source=/etc/resolv.conf \
          --mount volume=dns,target=/etc/resolv.conf \
          --volume etc-hosts,kind=host,source=/etc/hosts \
          --mount volume=etc-hosts,target=/etc/hosts"


        ExecStartPre=/usr/bin/mkdir -p /etc/kubernetes/manifests
        ExecStartPre=/usr/bin/mkdir -p /var/log/containers
        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/run/kubelet-pod.uuid

        ExecStart=/usr/lib/coreos/kubelet-wrapper %(optional_hostname_override)s \
          --kubeconfig=/etc/kubernetes/kubeconfig.yaml \
          --register-with-taints=node.alpha.kubernetes.io/ismaster=:NoSchedule \
          --cni-conf-dir=/etc/kubernetes/cni/net.d \
          --network-plugin=%(network_plugin)s \
          --container-runtime=docker \
          --allow-privileged=true \
          --pod-manifest-path=/etc/kubernetes/manifests \
          --cluster-dns=%(dns_ip)s \
          --cluster-domain=%(clusterDomain)s \
          --tls-cert-file=/etc/kubernetes/ssl/%(hostname)s.pem \
          --tls-private-key-file=/etc/kubernetes/ssl/%(hostname)s-key.pem \
          --node-labels=cluster-role=master%(additional_labels)s \
          --cloud-provider=%(cloud_provider)s

        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/run/kubelet-pod.uuid
        Restart=always
        RestartSec=10

        [Install]
        WantedBy=multi-user.target
write_files:
- path: /etc/kubernetes/kubeconfig.yaml
  permissions: "0644"
  owner: "root"
  content: |
    apiVersion: v1
    kind: Config
    clusters:
    - name: local
      cluster:
        server: https://%(master_ip)s:443
        certificate-authority: /etc/kubernetes/ssl/ca.pem
    users:
    - name: kubelet
      user:
        client-certificate: /etc/kubernetes/ssl/%(hostname)s.pem
        client-key: /etc/kubernetes/ssl/%(hostname)s-key.pem
    contexts:
    - context:
        cluster: local
        user: kubelet
      name: kubelet-context
    current-context: kubelet-context
- path: /etc/flannel/options.env
  permissions: "0644"
  owner: "root"
  content: |
    FLANNELD_IFACE=%(ip)s
    FLANNELD_ETCD_ENDPOINTS=%(etcd_hosts)s
%(hostsfile)s
%(resolvconf)s
- path: /etc/kubernetes/cni/docker_opts_cni.env
  permissions: "0644"
  owner: "root"
  content: |
    DOCKER_OPT_BIP=""
    DOCKER_OPT_IPMASQ=""
- path: /etc/kubernetes/cni/net.d/10-flannel.conf
  permissions: "0644"
  owner: "root"
  content: |
    {
      "name": "podnet",
      "type": "flannel",
      "delegate": {
        "isDefaultGateway": true
      }
    }
- path: /etc/kubernetes/ssl/ca.pem
  permissions: "0644"
  owner: "root"
  content: |
%(ca_pem)s
- path: /etc/kubernetes/ssl/ca-key.pem
  permissions: "0640"
  owner: "root"
  content: |
%(ca_key)s
- path: /etc/kubernetes/ssl/apiserver.pem
  permissions: "0644"
  owner: "root"
  content: |
%(api_pem)s
- path: /etc/kubernetes/ssl/apiserver-key.pem
  permissions: "0640"
  owner: "root"
  content:  |
%(api_key)s
- path: /etc/kubernetes/ssl/%(hostname)s.pem
  permissions: "0644"
  owner: "root"
  content: |
%(host_pem)s
- path: /etc/kubernetes/ssl/%(hostname)s-key.pem
  permissions: "0640"
  owner: "root"
  content: |
%(host_key)s
%(kube_manifests)s
%(kube_addons)s
